## 서블릿 필터 & 스프링 인터셉터
1. 서블릿 필터의 정의
Filter는 J2EE 표준 스펙으로 Servlet API 2.3 부터 등장하였고
Dispatcher Servlet에 요청이 전달되기 전, 후에 부가작업을 처리하는 객체이다.

2. 서블릿 필터가 제공하는 메서드
- init : 디폴트 메소드, 생성될때 한번만 호출
- destroy 디폴트 메소드, 소멸될때 한번만 호출
- doFilter : 
	- 필수적으로 오버라이딩
	- FilterChan(Filter 여러개 모여 형성된 체인)
	- chain.doFilter(request, response)를 넣어주지 않으면 다음 필터나 다음 단계로 넘어가지 않기때문에 반드시 명시해줘야함

3. 스프링 인터셉터
- 스프링 인터셉터는 spring이 제공하는 기술로 
  디스패처 서블릿이 컨트롤러를 호출하기 전/후 요청에 대해 부가적인 작업을 처리하는 객체이다.
  
4. 스프링 인터셉터가 제공하는 메서드
- PreHandle : 디폴트 메소드, Handler가 처리하기 전
- PostHandle : 디폴트 메소드, Handler가 처리한 후
	- 파라미터로 ModelAndView가 넘어옴
- afterCompletion : 디폴트 메소드, Handler가 처리한 후
	- 비즈니스 로직에서 예외가 발생했을때 처리 가능

6. 스프링 인터셉터 등록방법
인터셉터는 WebMvcConfigurer 인터페이스를 구현한 클래스 내부에서
addInterceptors라는 메서드를 오버라이드해서 추가할 수 있다.
addPathPatterns로 URI 요청에 대해서 인터셉터를 적용 시킨다.
excludePathPatterns로 특정 URI는 인터셉터를 적용시키지 않는다는 것을 지정할 수 있다.

7. 스프링 인터셉터 호출시점
핸들러 조회 -> 알맞은 핸들러 어댑터를 가져옴 -> preHandler 핸들러 어뎁터를 통해 핸들러 실행
-> postHandle -> view 관련 처리 -> afterCompletion

8. 필터와 인터셉터 차이
필터 : - 자바 표준 스펙
	  - 다음 필터가 실행하기 위해 개발자가 명시적으로 작성해줘야한다.
	  - ServletRequest, ServletResponse를 필터 체이닝 중간에 새로운 객체로 바꿀 수 있다.
	  - 필터에서 예외처리가 발생하면 @ControllerAdvice가 처리하지 못한다.
인터셉터:  - 스프링이 제공하는 기술
		- 다음 인터셉터를 실행하기 위해 개발자가 신경써야 하는 부분이 없다.
		- ServletRequest, ServletResponse를 인터셉터 체인 중간에 새로운 객체로 바꿀 수 없다.
		- 인터셉터가 예외가 발생하면 @ControllerAdvice에서 처리가 가능하다.

9. 언제 필터와 인터셉터를 사용해야 할까?
필터 : - 공통된 보안 및 인증/인가 관련 작업
	  - 모든 요청에 대한 로깅 또는 감사
	  - 이미지/데이터 압축 및 문자열 인코딩
	  - Spring과 분리되어야 하는 기능
인터셉터 : - 세부적인 보안 및 인증/인가 공통 작업
		- API 호출에 대한 로깅 또는 감사
		- Controller로 넘겨주는 정보(데이터)의 가공
